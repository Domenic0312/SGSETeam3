# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke

name: Test mit Tests

on:
  workflow_dispatch:
  push:
    paths:
      - 'CartService/**'

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: onlineshop-cluster
  GKE_ZONE: europe-west3
  DEPLOYMENT_NAME: cart-deployment
  IMAGE: cart-image
  TAG: latest
  DIRECTORY: CartService

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - name: Configure Docker
      run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    - name: Get GKE credentials
      uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}
    
    # Build the Docker image
    - name: Build Docker Image
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$TAG" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          ./$DIRECTORY/
    # Push the Docker image to Google Container Registry
    - name: Publish Docker Image to GCR
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$TAG"
        
    
    # Run test
    - name: Run Test
      run: gcloud docker exec gcr.io/$PROJECT_ID/$IMAGE:$TAG manage.py

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        ./kustomize edit add resource ./$DIRECTORY/deployment.yml
        ./kustomize edit add resource ./$DIRECTORY/service.yml
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$TAG
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
